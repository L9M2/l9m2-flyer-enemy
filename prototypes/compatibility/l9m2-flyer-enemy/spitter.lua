---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 12/31/2020 1:56 PM
--- 7/30/2024 This is what heyqule told me to modify, it's very similar to ArmouredBiters.
---

local ErmConfig = require('__enemyracemanager__/lib/global_config')
local ERM_UnitHelper = require('__enemyracemanager__/lib/rig/unit_helper')
local ERM_DataHelper = require('__enemyracemanager__/lib/rig/data_helper')
local ERM_DebugHelper = require('__enemyracemanager__/lib/debug_helper')

local Table = require('__stdlib__/stdlib/utils/table')
local String = require('__stdlib__/stdlib/utils/string')
require('util')

require('__stdlib__/stdlib/utils/defines/time')
require('__enemyracemanager__/global')

local max_hitpoint_multiplier = settings.startup["enemyracemanager-max-hitpoint-multipliers"].value / 2


-- Handles acid and poison resistance
local base_acid_resistance = 10
local incremental_acid_resistance = 80
-- Handles physical resistance
local base_physical_resistance = 20
local incremental_physical_resistance = 75
-- Handles fire and explosive resistance
local base_fire_resistance = 10
local incremental_fire_resistance = 80
-- Handles laser and electric resistance
local base_electric_resistance = 0
local incremental_electric_resistance = 85
-- Handles cold resistance
local base_cold_resistance = 10
local incremental_cold_resistance = 80

function makeLevelEnemy(level, type, health_cut_ratio)
    health_cut_ratio = health_cut_ratio or 1
    local spitter = util.table.deepcopy(data.raw['unit'][type])
    local original_hitpoint = spitter['max_health']    --The problematic point of interest. Well it would help if I placed the require of this file AFTER flyer data code.

    spitter['localised_name'] = { 'entity-name.' .. MOD_NAME .. '/' .. spitter['name'], level }
    spitter['name'] = MOD_NAME .. '/' .. spitter['name'] .. '/' .. level
    spitter['max_health'] = ERM_UnitHelper.get_health(original_hitpoint / health_cut_ratio, original_hitpoint * max_hitpoint_multiplier / health_cut_ratio, level)
    spitter['resistances'] = {
        { type = "acid", percent = ERM_UnitHelper.get_resistance(base_acid_resistance, incremental_acid_resistance, level) },
        { type = "poison", percent = ERM_UnitHelper.get_resistance(base_acid_resistance, incremental_acid_resistance, level) },
        { type = "physical", percent = ERM_UnitHelper.get_resistance(base_physical_resistance, incremental_physical_resistance, level) },
        { type = "fire", percent = 95 },
        { type = "explosion", percent = ERM_UnitHelper.get_resistance(base_fire_resistance, incremental_fire_resistance, level) },
        { type = "laser", percent = ERM_UnitHelper.get_resistance(base_electric_resistance, incremental_electric_resistance, level) },
        { type = "electric", percent = ERM_UnitHelper.get_resistance(base_electric_resistance, incremental_electric_resistance, level) },
        { type = "cold", percent = ERM_UnitHelper.get_resistance(base_cold_resistance, incremental_cold_resistance, level) }
    }
    spitter['healing_per_tick'] = 0
    ERM_UnitHelper.modify_biter_damage(spitter, level)
    spitter['movement_speed'] = ERM_UnitHelper.get_movement_speed(spitter['movement_speed'], spitter['movement_speed'], settings.startup["enemyracemanager-level-multipliers"].value, level)

    spitter['pollution_to_join_attack'] = ERM_UnitHelper.get_pollution_attack(spitter['pollution_to_join_attack'], level)
    --spitter['map_color'] = ERM_UnitHelper.format_map_color(settings.startup['enemyracemanager-flyer_map_color'].value) --Will figure this out later. Currently causes crashes.
    return spitter
end

local max_level = ErmConfig.MAX_LEVELS + ErmConfig.MAX_ELITE_LEVELS

for i = 1, max_level do
    -- 1, 50 - 10, 175 - 20, 275 (org: 50)
    data:extend({ makeLevelEnemy(i, 'small-flyer') })
    -- 1, 100 - 10, 350 - 20, 600 (org: 200)
    data:extend({ makeLevelEnemy(i, 'medium-flyer', 2) })
    -- 1, 400 - 10, 1400 - 20, 2400 (org: 800)
    data:extend({ makeLevelEnemy(i, 'big-flyer', 2) })
    -- 1, 2000 - 10, 7000 - 20, 12000 (org: 6000)
    data:extend({ makeLevelEnemy(i, 'behemoth-flyer', 3) })
    -- 1, 4500 - 10, 15750 - 20, 27000 (org: 18000)
    data:extend({ makeLevelEnemy(i, 'ultra-flyer', 4) })
end